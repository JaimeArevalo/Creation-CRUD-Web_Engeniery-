# Configuración para el entorno de producción (usando H2 para pruebas locales)

# Base de datos H2 en memoria para pruebas locales de producción
spring.datasource.url=jdbc:h2:mem:proddb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

# Configuración del servidor
server.port=${PORT:8080}

# Nivel de logging
logging.level.com.carddemo=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN

# Seguridad
spring.security.csrf.enabled=true

# Configuración de performance
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.connection-timeout=30000

# Actuator endpoints para monitoreo
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized

# Este comentario indica que esta es una configuración temporal para pruebas
# En un entorno de producción real deberías usar PostgreSQL u otra base de datos duradera
# con las siguientes variables de entorno:
# spring.datasource.url=${DATABASE_URL}
# spring.datasource.username=${DATABASE_USERNAME}
# spring.datasource.password=${DATABASE_PASSWORD}
# spring.datasource.driver-class-name=${DATABASE_DRIVER:org.postgresql.Driver}
# spring.jpa.properties.hibernate.dialect=${DATABASE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}